version: "3.8"

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fullstack_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    environment:
      NODE_ENV: development
      PORT: 5001
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fullstack_auth
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "5001:5001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
    networks:
      - app-network

  # User Service (to be created)
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    environment:
      NODE_ENV: development
      PORT: 5002
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fullstack_auth
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "5002:5002"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    networks:
      - app-network

  # Dashboard Service (to be created)
  dashboard-service:
    build:
      context: .
      dockerfile: services/dashboard-service/Dockerfile
    environment:
      NODE_ENV: development
      PORT: 5003
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fullstack_auth
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "5003:5003"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/dashboard-service:/app
      - /app/node_modules
    networks:
      - app-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    environment:
      NODE_ENV: development
      PORT: 5000
      AUTH_SERVICE_URL: http://auth-service:5001
      USER_SERVICE_URL: http://user-service:5002
      DASHBOARD_SERVICE_URL: http://dashboard-service:5003
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "5000:5000"
    depends_on:
      - auth-service
      - user-service
      - dashboard-service
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
